upstream haproxy {
    server 127.0.0.1:8000;
}

upstream haproxy-stats {
    server 127.0.0.1:8080;
}

server {
    listen 80 default deferred;
    #listen 80 default_server;
    server_name _;

    root <%= current_path %>/public;

    location ^~ /assets/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
    }

    access_log <%= shared_path %>/log/nginx.access.log;
    error_log <%= shared_path %>/log/nginx.error.log info;

    if (-f $document_root/maintenance.html) {
        rewrite  ^(.*)$  /maintenance.html last;
        break;
    }

    location ~ ^/(assets)/  {
        root <%= current_path %>/public;
        expires max;
        add_header  Cache-Control public;
    }

    try_files $uri/index.html $uri @haproxy;
    location @haproxy {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://haproxy;
    }

    location /stats {
        proxy_pass http://haproxy-stats/stats;
    }

    recursive_error_pages on;
    if (-f $document_root/system/maintenance.html) {
        return 503;
    }

    error_page 503 @maintenance;
    location @maintenance {

        error_page 405 = /system/maintenance.html;

        # Serve static assets if found.
        if (-f $request_filename) {
            break;
        }

        rewrite  ^(.*)$  /system/maintenance.html break;

    }

    error_page 500 502 504 /500.html;
    client_max_body_size 4G;
    keepalive_timeout 10;

}